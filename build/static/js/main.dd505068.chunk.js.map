{"version":3,"sources":["components/CustomChatbot.js","components/HiddenChatbot.js","components/base/Base.js","components/tomato/Tomato.js","components/mushroom/Mushroom.js","components/corn/Corn.js","components/veggie/Veggie.js","components/buttonGroup/ButtonGroup.js","components/mktg/Mktg.js","App.js","serviceWorker.js","index.js"],"names":["theme","background","fontFamily","headerBgColor","headerFontColor","headerFontSize","botBubbleColor","botFontColor","userBubbleColor","userFontColor","config","width","height","floating","headerTitle","CustomChatbot","props","steps","id","message","trigger","user","options","value","label","eventHandler","end","HiddenChatbot","speechSynthesis","enable","lang","Base","className","Tomato","Mushroom","Corn","Veggie","ButtonGroup","buttonWidth","style","onClick","Mktg","state","tomato","mushroom","veggie","corn","clickEventHandler","ingredient","from","setState","this","display","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dd505068.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ChatBot from \"react-simple-chatbot\";\r\nimport { ThemeProvider } from 'styled-components';\r\n\r\nconst theme = {\r\n  background: '#f5f8fb',\r\n  fontFamily: 'Helvetica Neue',\r\n  headerBgColor: '#222',\r\n  headerFontColor: '#fff',\r\n  headerFontSize: '15px',\r\n  botBubbleColor: '#17a',\r\n  botFontColor: '#fff',\r\n  userBubbleColor: '#777',\r\n  userFontColor: '#fff',\r\n};\r\nconst config = {\r\n      width: \"300px\",\r\n      height: \"500px\",\r\n      floating: true,\r\n      headerTitle : \"ModernEdge Chatbot\",\r\n  };\r\n\r\nfunction CustomChatbot(props) {\r\n    \r\n    const steps = [\r\n        {\r\n           id: \"Greet\",\r\n           message: \"Hello, Welcome to our Modern Edge Mktg\",\r\n           trigger: \"Ask Name\"\r\n        },\r\n        {\r\n           id: \"Ask Name\",\r\n           message: \"With whom am I chatting?\",\r\n           trigger: \"Waiting user input for name\",\r\n        },\r\n        {\r\n           id: \"Waiting user input for name\",\r\n           user: true,\r\n           trigger: \"Active listen\",\r\n        },\r\n        {\r\n           id: \"Active listen\",\r\n           message: \"Hello {previousValue}, it's a pleasure.\",\r\n           trigger: \"Asking options to eat\" \r\n\r\n        },{\r\n          id: \"Asking options to eat\",\r\n          message: \"Would you like to start Your Enrollment Application...?\",\r\n          trigger: \"Optin\" \r\n\r\n       }, {\r\n        id: \"Optin\",\r\n        options:[{\r\n          value: true,\r\n          label: \"Sure!\",\r\n          trigger: \"Go on\" \r\n        },  { \r\n          value: \"false\",\r\n          label: \"No\",\r\n          trigger: \"Other Options\"\r\n        } \r\n      ]\r\n}, {\r\n  id: \"Other Options\",\r\n  message: \"Sorry, We don't have other options available at the moment. Would you like to try our chatbot further?\",\r\n  trigger: \"Reconfirmation\"\r\n},{\r\nid: \"Reconfirmation\",\r\noptions: [\r\n           {\r\n             value: true,\r\n             label: \"Yes\",\r\n             trigger: \"Go on\"\r\n           },\r\n           { \r\n             value: \"false\",\r\n             label: \"No\",\r\n             trigger: \"Done\"\r\n           } \r\n         ]\r\n},{\r\n  id: \"Go on\",\r\n  message: \"We'll start by asking a few brief questions, and then scheduling your call.\",\r\n  trigger: \"prompt email\" \r\n },\r\n        {\r\n          id: \"prompt email\",\r\n          message: \"What's your Email Address?\",\r\n          trigger: \"Waiting for user email input\"\r\n       },{\r\n         id: \"Waiting for user email input\", \r\n        user: true,\r\n        trigger: \"Repeat that\"\r\n       },\r\n        { \r\n            id: \"Repeat that\",\r\n            message: \"{previousValue}.  Great. Last one, what's your Mobile Number? \",\r\n            trigger: \"Wait four\" \r\n         }, {\r\n          id: \"Wait four\", \r\n         user: true,\r\n         trigger: \"Repeat four\"\r\n        },{ \r\n          id: \"Repeat four\",\r\n          message: \"{previousValue}\",\r\n          trigger: \"Go five\" \r\n       },{\r\n          id:  \"Go five\", \r\n          message: \"Okay. Now for some questions about your agency.   Click on Continue\",\r\n          trigger: \"Continue\", \r\n        },{\r\n\r\n          id: \"Continue\",\r\n          options: [\r\n                     {\r\n                       value: true,\r\n                       label: \"Continue\",\r\n                       trigger: \"six\"\r\n                     },\r\n                     { \r\n                       value: \"burger\",\r\n                       label: \"Let me ask something else.\",\r\n                       trigger: \"Not available\"\r\n                     } \r\n                   ]\r\n       }, {\r\n        id: \"Not available\",\r\n        message: \"Sorry, We don't have other options available at the moment. Would you like to try our chatbot further?\",\r\n        trigger: \"Reconfirming\"\r\n     },{\r\n      id: \"Reconfirming\",\r\n      options: [\r\n                 {\r\n                   value: true,\r\n                   label: \"Yes\",\r\n                   trigger: \"six\"\r\n                 },\r\n                 { \r\n                   value: \"false\",\r\n                   label: \"No\",\r\n                   trigger: \"Done\"\r\n                 } \r\n               ]\r\n   }, {\r\n          id: \"six\", \r\n          message:\"So, what's your Agency Name? \",\r\n          trigger: \"Wait six\", \r\n        },{\r\n          id: \"Wait six\", \r\n         user: true,\r\n         trigger: \"seven\"\r\n        },{ \r\n          id: \"seven\", \r\n          message: \"Awesome name! What's {previousValue} website URl? \",\r\n          trigger: \"Wait seven\", \r\n        },{\r\n          id: \"Wait seven\", \r\n         user: true,\r\n         trigger: \"eight\"\r\n        },{\r\n          id: \"eight\", \r\n          message: \"What's your Agency Niche? \",\r\n          trigger: \"Wait eight\", \r\n        },{\r\n          id: \"Wait eight\", \r\n         user: true,\r\n         trigger: \"nine\"\r\n        },{\r\n          id: \"nine\", \r\n          message: \"Ok, {previousValue}, What's the #1 challenge holding back your agency growth right now? \",\r\n          trigger: \"Wait nine\", \r\n        },{\r\n          id: \"Wait nine\", \r\n         user: true,\r\n         trigger: \"ten\"\r\n        },{\r\n          id: \"ten\", \r\n          message: \"What's your agencies current monthly revenue? \",\r\n          trigger: \"Wait ten\", \r\n        },{\r\n          id: \"Wait ten\", \r\n         user: true,\r\n         trigger: \"Asking for Tomatoes in Pizza\"\r\n        },{\r\n           id: \"Asking for Tomatoes in Pizza\",\r\n           message: \"Would you like to have tomatoes in your pizza\",\r\n           trigger: \"Adding Tomatoes in Pizza\"\r\n        },\r\n        {\r\n           id: \"Adding Tomatoes in Pizza\",\r\n           options: [\r\n                      {\r\n                        value: true,\r\n                        label: \"Yes\",\r\n                        trigger: () => {\r\n                           props.eventHandler(\"tomato\",\"true\");\r\n                           return \"Asking for Mushroom in Pizza\"  \r\n                         }\r\n                      },\r\n                      { \r\n                        value: \"false\",\r\n                        label: \"No\",\r\n                        trigger: () => {\r\n                            props.eventHandler(\"tomato\",\"false\");\r\n                            return \"Asking for Mushroom in Pizza\"  \r\n                        }\r\n                        // trigger: \"Asking for Mushroom in Pizza\"\r\n                      } \r\n                    ]\r\n        },\r\n        \r\n        {\r\n           id: \"Asking for Mushroom in Pizza\",\r\n           message: \"Would you like to have mushroom in your pizza\",\r\n           trigger: \"Adding Mushroom in Pizza\"\r\n        },\r\n \r\n        {\r\n           id: \"Adding Mushroom in Pizza\",\r\n           options: [\r\n                      {\r\n                        value: true,\r\n                        label: \"Yes\",\r\n                        trigger: () => {\r\n                           props.eventHandler(\"mushroom\",\"true\");\r\n                           return \"Asking for Corn in Pizza\"  \r\n                         }\r\n                      },\r\n                      { \r\n                        value: \"false\",\r\n                        label: \"No\",\r\n                        trigger: () => {\r\n                            props.eventHandler(\"mushroom\",\"false\");\r\n                            return \"Asking for Corn in Pizza\"  \r\n                        }\r\n                        // trigger: \"Asking for Corn in Pizza\"\r\n                      } \r\n                    ]\r\n        },\r\n        {\r\n           id: \"Asking for Corn in Pizza\",\r\n           message: \"Would you like to have corn in your pizza\",\r\n           trigger: \"Adding Corn in Pizza\"\r\n        },\r\n \r\n        {\r\n           id: \"Adding Corn in Pizza\",\r\n           options: [\r\n                      {\r\n                        value: true,\r\n                        label: \"Yes\",\r\n                        trigger: () => {\r\n                           props.eventHandler(\"corn\",\"true\");\r\n                           return \"Asking for Veggies in Pizza\"  \r\n                         }\r\n                      },\r\n                      { \r\n                        value: \"false\",\r\n                        label: \"No\",\r\n                        trigger: () => {\r\n                            props.eventHandler(\"corn\",\"false\");\r\n                            return \"Asking for Veggies in Pizza\"  \r\n                        }\r\n                        // trigger: \"Asking for Veggies in Pizza\"\r\n                      } \r\n                    ]\r\n        },\r\n         \r\n        {\r\n           id: \"Asking for Veggies in Pizza\",\r\n           message: \"Would you like to have veggies in your pizza\",\r\n           trigger: \"Adding Veggies in Pizza\"\r\n        },\r\n \r\n        {\r\n           id: \"Adding Veggies in Pizza\",\r\n           options: [\r\n                      {\r\n                        value: true,\r\n                        label: \"Yes\",\r\n                        trigger: () => {\r\n                           props.eventHandler(\"veggie\",\"true\");\r\n                           return \"Done\"  \r\n                         }\r\n                      },\r\n                      { \r\n                        value: \"false\",\r\n                        label: \"No\",\r\n                        trigger: () => {\r\n                            props.eventHandler(\"veggie\",\"false\");\r\n                            return \"Done\"  \r\n                        }\r\n                        // trigger: \"Done\"\r\n                      } \r\n                    ]\r\n        },\r\n        {\r\n            id: \"Done\",\r\n            message: \"Have a great day !!\",\r\n            end: true\r\n        }\r\n];\r\n    \r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        <ChatBot steps={steps} {...config}\r\n          //  speechSynthesis={{ enable: true, lang: 'en' }}\r\n         />\r\n      </ThemeProvider>\r\n  );\r\n}\r\nexport default CustomChatbot;","import React from \"react\";\r\nimport ChatBot from \"react-simple-chatbot\";\r\n\r\nfunction HiddenChatbot(props) {\r\n    const steps = [\r\n        {\r\n           id: \"Greet\",\r\n           message: \"Hello, Welcome to Modern Edge Marketing\",\r\n           trigger: \"Reccommend\",\r\n        },\r\n        {\r\n          id: \"Reccommend\",\r\n          message: \"Use chatbot for HELP\",\r\n          trigger: \"Breach\",\r\n        },\r\n        {\r\n          id: \"Breach\",\r\n          message: \"Ready? Click the button below now.\",\r\n          end: true \r\n          \r\n          }\r\n];\r\n    \r\n    return (\r\n        <ChatBot steps={steps}\r\n           speechSynthesis={{ enable: true, lang: 'en' }}\r\n        />\r\n  );\r\n}\r\nexport default HiddenChatbot;","import React from \"react\";\r\n\r\nfunction Base() {\r\n  return (\r\n    <div>\r\n      <div className=\"pizza-base-1\" />\r\n      <div className=\"pizza-base-2\" />\r\n      <div className=\"slice-base-1\" />\r\n      <div className=\"slice-base-2\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Base;\r\n","import React from \"react\";\r\n\r\nfunction Tomato() {\r\n  return (\r\n    <div>\r\n      <div className=\"tomatoes\">\r\n        <div className=\"tomato-1\" />\r\n        <div className=\"tomato-2\" />\r\n        <div className=\"tomato-3\" />\r\n        <div className=\"tomato-4\" />\r\n        <div className=\"tomato-5\" />\r\n        <div className=\"tomato-6\" />\r\n        <div className=\"tomato-7\" />\r\n        <div className=\"tomato-8\" />\r\n      </div>\r\n\r\n      <div className=\"tomatoes\">\r\n        <div className=\"tomato-9\" />\r\n        <div className=\"tomato-10\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tomato;\r\n","import React from \"react\";\r\n\r\nfunction Mushroom() {\r\n  return (\r\n    <div>\r\n      <div className=\"mushrooms\">\r\n        <div className=\"cup-1\" />\r\n        <div className=\"stem-1\" />\r\n        <div className=\"cup-2\" />\r\n        <div className=\"stem-2\" />\r\n        <div className=\"cup-3\" />\r\n        <div className=\"stem-3\" />\r\n        <div className=\"cup-4\" />\r\n        <div className=\"stem-4\" />\r\n        <div className=\"cup-5\" />\r\n        <div className=\"stem-5\" />\r\n        <div className=\"cup-6\" />\r\n        <div className=\"stem-6\" />\r\n        <div className=\"cup-7\" />\r\n        <div className=\"stem-7\" />\r\n      </div>\r\n\r\n      <div className=\"mushrooms\">\r\n        <div className=\"cup-8\" />\r\n        <div className=\"stem-8\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Mushroom;\r\n","import React from \"react\";\r\n\r\nfunction Corn() {\r\n  return (\r\n    <div>\r\n      <div className=\"corns\">\r\n        <div className=\"corn-1\" />\r\n        <div className=\"corn-2\" />\r\n        <div className=\"corn-3\" />\r\n        <div className=\"corn-4\" />\r\n        <div className=\"corn-5\" />\r\n        <div className=\"corn-6\" />\r\n        <div className=\"corn-7\" />\r\n        <div className=\"corn-8\" />\r\n        <div className=\"corn-9\" />\r\n        <div className=\"corn-10\" />\r\n        <div className=\"corn-11\" />\r\n      </div>\r\n\r\n      <div className=\"corns\">\r\n        <div className=\"corn-11\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Corn;\r\n","import React from \"react\";\r\n\r\nfunction Veggie() {\r\n  return (\r\n    <div>\r\n      <div className=\"vegies\">\r\n        <div className=\"veg-1\" />\r\n        <div className=\"veg-2\" />\r\n        <div className=\"veg-3\" />\r\n        <div className=\"veg-4\" />\r\n        <div className=\"veg-5\" />\r\n        <div className=\"veg-6\" />\r\n        <div className=\"veg-7\" />\r\n        <div className=\"veg-8\" />\r\n        <div className=\"veg-9\" />\r\n        <div className=\"veg-10\" />\r\n        <div className=\"veg-11\" />\r\n        <div className=\"veg-12\" />\r\n        <div className=\"veg-13\" />\r\n      </div>\r\n      <div className=\"vegies\">\r\n        <div className=\"veg-14\" /> \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Veggie;\r\n","import React from \"react\";\r\n\r\nfunction ButtonGroup(props) {\r\n  const buttonWidth = {\r\n    width: \"600px\"\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"d-flex justify-content-center mt-3 mb-3\">\r\n        <button\r\n          className=\"btn btn-danger btn-block\"\r\n          style={buttonWidth}\r\n          onClick={() => {\r\n            props.eventHandler(\"tomato\",\"btn\");\r\n          }}\r\n        >\r\n          Add/Remove Tomato\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"d-flex justify-content-center mt-3 mb-3\">\r\n        <button\r\n          className=\"btn btn-secondary btn-block\"\r\n          style={buttonWidth}\r\n          onClick={() => {\r\n            props.eventHandler(\"mushroom\",\"btn\");\r\n          }}\r\n        >\r\n          Add/Remove Mushroom\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"d-flex justify-content-center mt-3 mb-3\">\r\n        <button\r\n          className=\"btn btn-warning btn-block\"\r\n          style={buttonWidth}\r\n          onClick={() => {\r\n            props.eventHandler(\"corn\",\"btn\");\r\n          }}\r\n        >\r\n          Add/Remove Corn\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"d-flex justify-content-center mt-3 mb-3\">\r\n        <button\r\n          className=\"btn btn-success 1-block\"\r\n          style={buttonWidth}\r\n          onClick={() => {\r\n            props.eventHandler(\"veggie\",\"btn\");\r\n          }}\r\n        >\r\n          Add/Remove Veggie\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ButtonGroup;\r\n","import React, { Component } from \"react\";\r\nimport \"./Mktg.css\";\r\nimport CustomChatbot from '../CustomChatbot';\r\nimport HiddenChatbot from '../HiddenChatbot';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Base from \"../base/Base\";\r\nimport Tomato from \"../tomato/Tomato\";\r\nimport Mushroom from \"../mushroom/Mushroom\";\r\nimport Corn from \"../corn/Corn\";\r\nimport Veggie from \"../veggie/Veggie\";\r\nimport ButtonGroup from \"../buttonGroup/ButtonGroup\";\r\n\r\nclass Mktg extends Component {\r\n  state = {\r\n      tomato: false,\r\n      mushroom: false,\r\n      veggie: false,\r\n      corn: false\r\n  };\r\n\r\n  clickEventHandler = (ingredient,from) => {\r\n    if(from==\"btn\"){\r\n      if (ingredient === \"tomato\") {\r\n        this.setState({\r\n          tomato: !this.state.tomato\r\n        });\r\n      } else if (ingredient === \"mushroom\") {\r\n        this.setState({\r\n          mushroom: !this.state.mushroom\r\n        });\r\n      } else if (ingredient === \"corn\") {\r\n        this.setState({\r\n          corn: !this.state.corn\r\n        });\r\n      } else {\r\n        this.setState({\r\n          veggie: !this.state.veggie\r\n        });\r\n      }\r\n    }\r\n    else{\r\n      if (ingredient === \"tomato\") {\r\n        this.setState({\r\n          tomato: (from==\"true\")?true:false\r\n        });\r\n      } else if (ingredient === \"mushroom\") {\r\n        this.setState({\r\n          mushroom: (from==\"true\")?true:false\r\n        });\r\n      } else if (ingredient === \"corn\") {\r\n        this.setState({\r\n          corn: (from==\"true\")?true:false\r\n        });\r\n      } else {\r\n        this.setState({\r\n          veggie: (from==\"true\")?true:false\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const tomato = this.state.tomato && <Tomato />;\r\n    const mushroom = this.state.mushroom && <Mushroom />;\r\n    const corn = this.state.corn && <Corn />;\r\n    const veggie = this.state.veggie && <Veggie />;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"container mt-5\">\r\n          <div className=\"d-flex justify-content-center\">\r\n            <div className=\"plate\">\r\n              <Base />\r\n              {tomato}\r\n              {mushroom}\r\n              {corn}\r\n              {veggie}\r\n            </div>\r\n          </div>\r\n          <ButtonGroup eventHandler={this.clickEventHandler} />\r\n          <div style={{display: \"none\",}}>\r\n            <HiddenChatbot/> \r\n          </div>\r\n           <CustomChatbot eventHandler={this.clickEventHandler} /> \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Mktg;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Mktg from \"./components/mktg/Mktg\";\r\n\r\nfunction App() {\r\n  return <Mktg />;\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}